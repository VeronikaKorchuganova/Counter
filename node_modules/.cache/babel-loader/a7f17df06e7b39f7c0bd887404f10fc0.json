{"ast":null,"code":"const defaultState = {\n  count: 210\n};\nexport const countReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"ADD_1\":\n      return { ...state,\n        count: state.count + action.payload\n      };\n\n    case \"SET_COUNT\":\n      return { ...state,\n        count: 0 + action.payload\n      };\n\n    case \"BLOCK_COUNTER\":\n      return { ...state,\n        count: 210\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["defaultState","count","countReducer","state","action","type","payload"],"sources":["/Users/veronika/Documents/MyApplications/task3/src/store/countReducer.js"],"sourcesContent":["const defaultState = {\n    count: 210\n}\n\nexport const countReducer = (state = defaultState, action) => {\n  switch (action.type) {\n    case \"ADD_1\":\n      return {...state, count: state.count + action.payload};\n    case \"SET_COUNT\":\n      return {...state, count: 0 + action.payload};\n    case \"BLOCK_COUNTER\":\n      return {...state, count: 210};\n    default:\n      return state;\n  }\n}"],"mappings":"AAAA,MAAMA,YAAY,GAAG;EACjBC,KAAK,EAAE;AADU,CAArB;AAIA,OAAO,MAAMC,YAAY,GAAG,YAAkC;EAAA,IAAjCC,KAAiC,uEAAzBH,YAAyB;EAAA,IAAXI,MAAW;;EAC5D,QAAQA,MAAM,CAACC,IAAf;IACE,KAAK,OAAL;MACE,OAAO,EAAC,GAAGF,KAAJ;QAAWF,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAcG,MAAM,CAACE;MAAvC,CAAP;;IACF,KAAK,WAAL;MACE,OAAO,EAAC,GAAGH,KAAJ;QAAWF,KAAK,EAAE,IAAIG,MAAM,CAACE;MAA7B,CAAP;;IACF,KAAK,eAAL;MACE,OAAO,EAAC,GAAGH,KAAJ;QAAWF,KAAK,EAAE;MAAlB,CAAP;;IACF;MACE,OAAOE,KAAP;EARJ;AAUD,CAXM"},"metadata":{},"sourceType":"module"}