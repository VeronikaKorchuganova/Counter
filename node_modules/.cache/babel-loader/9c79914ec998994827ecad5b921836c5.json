{"ast":null,"code":"import { createAction, createReducer } from '@reduxjs/toolkit';\nconst defaultState = {\n  count: 0,\n  blocked: false\n};\nexport const increment = createAction('ADD_1');\nexport const setCount = createAction('SET_COUNT', payload => ({\n  payload\n}));\nexport const toggleCounter = createAction('TOGGLE_COUNTER'); // export const countReducer = createReducer(defaultState, {\n//   [increment]: ({ count, blocked, ...restState }) => ({\n//     ...restState, \n//     count: blocked \n//       ? count \n//       : count + 1\n//   }),\n//   [setCount]: ({ count, blocked, ...restState }, { payload }) => ({\n//     ...restState, \n//     count: blocked \n//       ? count \n//       : Number(payload)\n//   }),\n//   [toggleCounter]: ({ blocked, ...restState }) => ({\n//     ...restState, \n//     blocked: !blocked\n//   })\n// });\n\nexport const countReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  return { ...defaultState\n  };\n};","map":{"version":3,"names":["createAction","createReducer","defaultState","count","blocked","increment","setCount","payload","toggleCounter","countReducer","state","action"],"sources":["/Users/veronika/Documents/MyApplications/task3/src/store/countReducer.js"],"sourcesContent":["import { createAction, createReducer } from '@reduxjs/toolkit'\n\nconst defaultState = {\n    count: 0,\n    blocked: false\n}\n\nexport const increment = createAction('ADD_1');\nexport const setCount = createAction('SET_COUNT', payload => ({payload}));\nexport const toggleCounter = createAction('TOGGLE_COUNTER');\n\n// export const countReducer = createReducer(defaultState, {\n//   [increment]: ({ count, blocked, ...restState }) => ({\n//     ...restState, \n//     count: blocked \n//       ? count \n//       : count + 1\n//   }),\n\n//   [setCount]: ({ count, blocked, ...restState }, { payload }) => ({\n//     ...restState, \n//     count: blocked \n//       ? count \n//       : Number(payload)\n//   }),\n\n//   [toggleCounter]: ({ blocked, ...restState }) => ({\n//     ...restState, \n//     blocked: !blocked\n//   })\n// });\n\nexport const countReducer = (state = defaultState, action) => ({...defaultState}); \n\n\n\n"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,aAAvB,QAA4C,kBAA5C;AAEA,MAAMC,YAAY,GAAG;EACjBC,KAAK,EAAE,CADU;EAEjBC,OAAO,EAAE;AAFQ,CAArB;AAKA,OAAO,MAAMC,SAAS,GAAGL,YAAY,CAAC,OAAD,CAA9B;AACP,OAAO,MAAMM,QAAQ,GAAGN,YAAY,CAAC,WAAD,EAAcO,OAAO,KAAK;EAACA;AAAD,CAAL,CAArB,CAA7B;AACP,OAAO,MAAMC,aAAa,GAAGR,YAAY,CAAC,gBAAD,CAAlC,C,CAEP;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMS,YAAY,GAAG;EAAA,IAACC,KAAD,uEAASR,YAAT;EAAA,IAAuBS,MAAvB;EAAA,OAAmC,EAAC,GAAGT;EAAJ,CAAnC;AAAA,CAArB"},"metadata":{},"sourceType":"module"}