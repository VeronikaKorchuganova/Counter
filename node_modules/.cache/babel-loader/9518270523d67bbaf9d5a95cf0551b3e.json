{"ast":null,"code":"// import { createAction, createReducer } from '@reduxjs/toolkit'\nconst defaultState = {\n  count: 0,\n  blocked: false\n};\nexport const countReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultState;\n  let {\n    type,\n    payload\n  } = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (type) {\n    case \"ADD_1\":\n      return { ...state,\n        count: state.blocked == 0 ? state.count + 1 : state.count\n      };\n\n    case \"SET_COUNT\":\n      return { ...state,\n        count: state.blocked == 0 ? 0 + Number(payload) : state.count\n      };\n\n    case \"TOGGLE_COUNTER\":\n      return { ...state,\n        blocked: !state.blocked\n      };\n\n    default:\n      return state;\n  }\n}; // const addIncrement1 = createAction('ADD_1')\n// const addIncrement = createAction('SET_COUNT')\n// const blockCounter = createAction('TOGGLE_COUNTER')\n// export const countReducer = createReducer(defaultState, (builder) => {\n//   builder\n//     .addCase(addIncrement1, (state, action) => {(state.blocked == 0) ? (state.count + 1) : state.count})\n//     .addCase(addIncrement, (state, action) => {(state.blocked == 0) ? (0 + Number(action.payload)) : state.count})\n//     .addCase(blockCounter, (state, action) => {!state.blocked})\n// })","map":{"version":3,"names":["defaultState","count","blocked","countReducer","state","type","payload","Number"],"sources":["/Users/veronika/Documents/MyApplications/task3/src/store/countReducer.js"],"sourcesContent":["// import { createAction, createReducer } from '@reduxjs/toolkit'\n\nconst defaultState = {\n    count: 0,\n    blocked: false\n}\n\nexport const countReducer = (state = defaultState, { type, payload }) => {\n  switch (type) {\n    case \"ADD_1\":\n      return {...state, count: (state.blocked == 0) ? state.count + 1 : state.count};\n    case \"SET_COUNT\":\n      return {...state, count: (state.blocked == 0) ? 0 + Number(payload) : state.count};\n    case \"TOGGLE_COUNTER\":\n      return {...state, blocked: !state.blocked };\n    default:\n      return state;\n  }\n}\n\n// const addIncrement1 = createAction('ADD_1')\n// const addIncrement = createAction('SET_COUNT')\n// const blockCounter = createAction('TOGGLE_COUNTER')\n\n// export const countReducer = createReducer(defaultState, (builder) => {\n//   builder\n//     .addCase(addIncrement1, (state, action) => {(state.blocked == 0) ? (state.count + 1) : state.count})\n//     .addCase(addIncrement, (state, action) => {(state.blocked == 0) ? (0 + Number(action.payload)) : state.count})\n//     .addCase(blockCounter, (state, action) => {!state.blocked})\n// })\n\n"],"mappings":"AAAA;AAEA,MAAMA,YAAY,GAAG;EACjBC,KAAK,EAAE,CADU;EAEjBC,OAAO,EAAE;AAFQ,CAArB;AAKA,OAAO,MAAMC,YAAY,GAAG,YAA6C;EAAA,IAA5CC,KAA4C,uEAApCJ,YAAoC;EAAA,IAAtB;IAAEK,IAAF;IAAQC;EAAR,CAAsB;;EACvE,QAAQD,IAAR;IACE,KAAK,OAAL;MACE,OAAO,EAAC,GAAGD,KAAJ;QAAWH,KAAK,EAAGG,KAAK,CAACF,OAAN,IAAiB,CAAlB,GAAuBE,KAAK,CAACH,KAAN,GAAc,CAArC,GAAyCG,KAAK,CAACH;MAAjE,CAAP;;IACF,KAAK,WAAL;MACE,OAAO,EAAC,GAAGG,KAAJ;QAAWH,KAAK,EAAGG,KAAK,CAACF,OAAN,IAAiB,CAAlB,GAAuB,IAAIK,MAAM,CAACD,OAAD,CAAjC,GAA6CF,KAAK,CAACH;MAArE,CAAP;;IACF,KAAK,gBAAL;MACE,OAAO,EAAC,GAAGG,KAAJ;QAAWF,OAAO,EAAE,CAACE,KAAK,CAACF;MAA3B,CAAP;;IACF;MACE,OAAOE,KAAP;EARJ;AAUD,CAXM,C,CAaP;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}