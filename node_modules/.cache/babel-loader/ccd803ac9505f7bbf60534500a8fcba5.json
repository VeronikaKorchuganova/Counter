{"ast":null,"code":"import { createAction, createReducer } from '@reduxjs/toolkit';\nconst defaultState = {\n  count: 0,\n  blocked: false\n}; // export const countReducer = (state = defaultState, { type, payload }) => {\n//   switch (type) {\n//     case \"ADD_1\":\n//       return {...state, count: (state.blocked == 0) ? state.count + 1 : state.count};\n//     case \"SET_COUNT\":\n//       return {...state, count: (state.blocked == 0) ? 0 + Number(payload) : state.count};\n//     case \"TOGGLE_COUNTER\":\n//       return {...state, blocked: !state.blocked };\n//     default:\n//       return state;\n//   }\n// }\n\nconst addIncrement1 = createAction('ADD_1');\nconst addIncrement = createAction('SET_COUNT');\nconst blockCounter = createAction('TOGGLE_COUNTER');\nexport const countReducer = createReducer(defaultState, builder => {\n  builder.addCase(addIncrement1, state => {\n    return state.blocked == 0 ? state.count + 1 : state.count;\n  }).addCase(addIncrement, (state, action) => {\n    return state.blocked == 0 ? 0 + Number(action.payload) : state.count;\n  }).addCase(blockCounter, state => {\n    return !state.blocked;\n  });\n});","map":{"version":3,"names":["createAction","createReducer","defaultState","count","blocked","addIncrement1","addIncrement","blockCounter","countReducer","builder","addCase","state","action","Number","payload"],"sources":["/Users/veronika/Documents/MyApplications/task3/src/store/countReducer.js"],"sourcesContent":["import { createAction, createReducer } from '@reduxjs/toolkit'\n\nconst defaultState = {\n    count: 0,\n    blocked: false\n}\n\n// export const countReducer = (state = defaultState, { type, payload }) => {\n//   switch (type) {\n//     case \"ADD_1\":\n//       return {...state, count: (state.blocked == 0) ? state.count + 1 : state.count};\n//     case \"SET_COUNT\":\n//       return {...state, count: (state.blocked == 0) ? 0 + Number(payload) : state.count};\n//     case \"TOGGLE_COUNTER\":\n//       return {...state, blocked: !state.blocked };\n//     default:\n//       return state;\n//   }\n// }\n\nconst addIncrement1 = createAction('ADD_1')\nconst addIncrement = createAction('SET_COUNT')\nconst blockCounter = createAction('TOGGLE_COUNTER')\n\nexport const countReducer = createReducer(defaultState, (builder) => {\n  builder\n    .addCase(addIncrement1, (state) => {return (state.blocked == 0) ? (state.count + 1) : state.count})\n    .addCase(addIncrement, (state, action) => {return (state.blocked == 0) ? (0 + Number(action.payload)) : state.count})\n    .addCase(blockCounter, (state) => {return !state.blocked})\n})\n\n"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,aAAvB,QAA4C,kBAA5C;AAEA,MAAMC,YAAY,GAAG;EACjBC,KAAK,EAAE,CADU;EAEjBC,OAAO,EAAE;AAFQ,CAArB,C,CAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,aAAa,GAAGL,YAAY,CAAC,OAAD,CAAlC;AACA,MAAMM,YAAY,GAAGN,YAAY,CAAC,WAAD,CAAjC;AACA,MAAMO,YAAY,GAAGP,YAAY,CAAC,gBAAD,CAAjC;AAEA,OAAO,MAAMQ,YAAY,GAAGP,aAAa,CAACC,YAAD,EAAgBO,OAAD,IAAa;EACnEA,OAAO,CACJC,OADH,CACWL,aADX,EAC2BM,KAAD,IAAW;IAAC,OAAQA,KAAK,CAACP,OAAN,IAAiB,CAAlB,GAAwBO,KAAK,CAACR,KAAN,GAAc,CAAtC,GAA2CQ,KAAK,CAACR,KAAxD;EAA8D,CADpG,EAEGO,OAFH,CAEWJ,YAFX,EAEyB,CAACK,KAAD,EAAQC,MAAR,KAAmB;IAAC,OAAQD,KAAK,CAACP,OAAN,IAAiB,CAAlB,GAAwB,IAAIS,MAAM,CAACD,MAAM,CAACE,OAAR,CAAlC,GAAsDH,KAAK,CAACR,KAAnE;EAAyE,CAFtH,EAGGO,OAHH,CAGWH,YAHX,EAG0BI,KAAD,IAAW;IAAC,OAAO,CAACA,KAAK,CAACP,OAAd;EAAsB,CAH3D;AAID,CALwC,CAAlC"},"metadata":{},"sourceType":"module"}